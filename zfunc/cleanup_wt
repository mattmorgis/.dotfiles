cleanup_wt() {
    if [ $# -eq 0 ]; then
        echo "Usage: cleanup_wt <merge|discard>"
        echo "  merge   - merge into the currently checked out branch in main repo"
        echo "  discard - discard all changes and delete the worktree"
        return 1
    fi

    local action="$1"

    # Check if we're in a worktree
    local current_dir=$(pwd)
    local git_dir=$(git rev-parse --git-common-dir 2>/dev/null)
    local main_repo_path=$(git rev-parse --show-toplevel)/../

    if ! git rev-parse --is-inside-work-tree &>/dev/null; then
        echo "Not in a git repository"
        return 1
    fi

    # Check if this is a worktree by seeing if .git is a file (not a directory)
    if [ -d .git ]; then
        echo "You're in the main repository, not a worktree"
        return 1
    fi

    local current_branch=$(git branch --show-current)
    local worktree_path=$(pwd)

    # Find the main repository path
    local main_repo_path=$(dirname $(git rev-parse --git-common-dir))

    case $action in
        merge)
            # Go to main repo and see what branch is checked out
            cd "$main_repo_path"
            local target_branch=$(git branch --show-current)
            cd "$worktree_path"

            echo "Merging '$current_branch' into '$target_branch'..."

            if git push origin "$current_branch"; then
                cd "$main_repo_path"
                if git pull && git merge "$current_branch"; then
                    git worktree remove "$worktree_path"
                    # Ensure directory is completely removed
                    [ -d "$worktree_path" ] && rm -rf "$worktree_path"
                    git branch -d "$current_branch"
                    git push origin --delete "$current_branch" 2>/dev/null || echo "Branch already deleted on remote"
                    echo "Merged '$current_branch' into '$target_branch' and cleaned up"
                    deactivate
                else
                    echo "Merge failed, worktree preserved"
                    cd "$worktree_path"
                    return 1
                fi
            else
                echo "Push failed, worktree preserved"
                return 1
            fi
            ;;
        discard)
            echo "Discarding worktree '$worktree_path'..."
            cd "$main_repo_path"
            git worktree remove "$worktree_path" --force
            # Ensure directory is completely removed
            [ -d "$worktree_path" ] && rm -rf "$worktree_path"
            git branch -D "$current_branch" 2>/dev/null || echo "Branch already deleted"
            git push origin --delete "$current_branch" 2>/dev/null || echo "Branch not on remote or already deleted"
            echo "Worktree '$current_branch' discarded"
            deactivate
            ;;
        *)
            echo "Invalid action: $action"
            echo "Usage: cleanup_wt <merge|discard>"
            return 1
            ;;
    esac
}
