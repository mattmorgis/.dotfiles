echo "Cleaning up local branches..."

# Update remote tracking info
echo "Fetching latest remote info..."
git fetch --prune

# Get current branch
current_branch=$(git branch --show-current)

# Get branches that are checked out in worktrees (have + prefix)
worktree_branches=$(git branch | grep '^+' | sed 's/^+ *//')

# Find local branches that don't have corresponding remotes
branches_to_delete=()

for branch in $(git branch | grep -v '^\*' | grep -v '^+' | sed 's/^ *//'); do
    # Skip current branch
    if [[ "$branch" == "$current_branch" ]]; then
        continue
    fi
    
    # Check if remote branch exists
    if ! git show-ref --verify --quiet "refs/remotes/origin/$branch"; then
        branches_to_delete+=("$branch")
    fi
done

if [[ ${#branches_to_delete[@]} -eq 0 ]]; then
    echo "No branches to clean up!"
    return 0
fi

echo "The following branches will be deleted:"
for branch in "${branches_to_delete[@]}"; do
    echo "  - $branch"
done

echo -n "Proceed with deletion? (y/N): "
read -r response

if [[ "$response" =~ ^[Yy]$ ]]; then
    for branch in "${branches_to_delete[@]}"; do
        echo "Deleting branch: $branch"
        git branch -D "$branch"
    done
    echo "Cleanup complete!"
else
    echo "Cleanup cancelled"
fi